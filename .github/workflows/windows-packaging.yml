name: Windows-Packaging

run-name: "${{ github.ref_name }} - ${{ github.run_number }}"

on:
  workflow_dispatch:

  push:
    branches:
      - master
      - release/**
      - feature/**
    paths-ignore:
      - "tests/**"
      - "docs/**"
      - "demos/**"
      - "CHANGELOG/**"
      - ".devcontainer/**"
      - ".github/**"
      - ".poshchan/**"
      - ".vscode/**"
      - "code-server/**"
      - "docker/**"
  pull_request:
    branches:
      - master
      - release/**
      - feature/**
    paths:
      - ".github/workflows/windows-packaging.yml"
      - "assets/wix/**"
      - "build.psm1"
      - "global.json"
      - "nuget.config"
      - "PowerShell.Common.props"
      - "src/*.csproj"
      - "test/packaging/windows/**"
      - "tools/ci.psm1"
      - "tools/packaging/**"
      - "tools/wix/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ contains(github.ref, 'merge')}}

permissions:
  contents: read

env:
  GIT_CONFIG_PARAMETERS: "'core.autocrlf=false'"
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_NOLOGO: 1
  __SuppressAnsiEscapeSequences: 1
  nugetMultiFeedWarnLevel: none
  SYSTEM_ARTIFACTSDIRECTORY: ${{ github.workspace }}/artifacts
  BUILD_ARTIFACTSTAGINGDIRECTORY: ${{ github.workspace }}/artifacts

jobs:
  windows_packaging:
    name: Windows Packaging - ${{ matrix.architecture }} - ${{ matrix.channel }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - architecture: x64
            channel: preview
            runtimePrefix: win7
          - architecture: x86
            channel: stable
            runtimePrefix: win7
          - architecture: x86
            channel: preview
            runtimePrefix: win7
          - architecture: arm64
            channel: preview
            runtimePrefix: win

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 1000

      - name: Capture Environment
        if: success() || failure()
        run: |
          Get-ChildItem -Path env: | Out-String -width 9999 -Stream | write-Verbose -Verbose
        shell: pwsh

      - name: Capture PowerShell Version Table
        if: success() || failure()
        run: |
          $PSVersionTable
        shell: pwsh

      - name: Switch to Public Feeds
        if: success()
        run: |
          Import-Module .\tools\ci.psm1
          Switch-PSNugetConfig -Source Public
        shell: pwsh

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./global.json

      - name: Bootstrap
        if: success()
        run: |
          Import-Module .\tools\ci.psm1
          Invoke-CIInstall -SkipUser
        shell: pwsh

      - name: Build and Package
        run: |
          Import-Module .\tools\ci.psm1
          New-CodeCoverageAndTestPackage
          Invoke-CIFinish -Runtime ${{ matrix.runtimePrefix }}-${{ matrix.architecture }} -channel ${{ matrix.channel }}
        shell: pwsh

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-packaging-${{ matrix.architecture }}-${{ matrix.channel }}
          path: |
            ${{ github.workspace }}/artifacts/**/*
            !${{ github.workspace }}/artifacts/**/*.pdb
